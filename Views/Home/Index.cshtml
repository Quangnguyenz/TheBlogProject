@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.Enums
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService _imageservice
@inject UserManager<BlogUser> _userManager

@model IPagedList<Blog>

@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    @foreach (var blog in Model)
    {
        <div class="col-sm-12 col-md-6 col-lg-4 mt-2">
            <div class="card border-dark">
                <img class="card-img-top" src="@_imageservice.DecodeImage(blog.ImageData, blog.ContentType)" />
                <div class="card-body text-center">

                    <div class="bg-warning">
                        <hr class="card-hr" />
                        <h5 class="card-title">@blog.Name</h5>
                        <hr class="card-hr" />
                    </div>
                    <div>
                        <p class="card-text cftooltip"
                           data-toggle="tooltip"
                           data-placement="top"
                           title=""
                           data-original-title="@blog.Description">@blog.Description</p>
                    </div>

                    <br />
                    <div class="text-center">
                        <a class="btn btn-dark btn-sm w-100 mb-2 p-3" asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@blog.Id">
                            Read Post
                        </a>
                    </div>

                    @if (User.IsInRole(BlogRole.Administrator.ToString()))
                    {
                        <div class="text-center">
                            <a class="btn btn-danger btn-sm w-100" asp-action="Create" asp-controller="Blogs" asp-route-id="@blog.Id">Create</a>
                        </div>
                    }

                    @if (User.IsInRole(BlogRole.Administrator.ToString()))
                    {
                        <div class="text-center">
                            <a class="btn btn-danger btn-sm w-100" asp-action="Edit" asp-controller="Blogs" asp-route-id="@blog.Id">Edit Blog</a>
                        </div>
                    }

                </div>





            </div>
        </div>
    }
</div>

            =
<!-- Pager-->
<div class="d-flex justify-content-end mb-4"><a class="btn btn-primary text-uppercase" href="#!">Older Posts →</a></div>
        </div>
    </div>
</div>

<!--Add paging control here-->
<div class="container-xxl">
    <div class="row">
        <div class="col h3">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>

    <div class="row">
        <div class="col">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
               new PagedListRenderOptions
         {
             LiElementClasses = new string[] { "page-item" },
             PageClasses = new string[] { "page-link" }

         })
        </div>
    </div>
</div>


@section Scripts{
    <script>
        var swalMsg = '@TempData["SweetAlert"]'
        if (swalMsg != ""{
            Swal.Fire({
                icon: success,
                title: swalMsg,
                timer: 2500
            })
        }

        $(document).ready(function () {
            $("p").tooltip();
        })
    </script>
} 